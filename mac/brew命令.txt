安装卸载brew
xcode-select --install
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup

更新aliyun源
cd "$(brew --repo)"
git remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git
cd "$(brew --repo)/Library/Taps/homebrew/homebrew-core"
git remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git
git reset --hard HEAD
git checkout master
git pull origin master
echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles' >> ~/.bash_profile
source ~/.bash_profile

aliyun安装
git clone https://github.com/Homebrew/install brew-install
sed -i "" "s/BREW_REPO=\"https:\/\/github.com\/Homebrew\/brew\"/BREW_REPO=\"https:\/\/mirrors.aliyun.com\/homebrew\/brew.git\"/g" ./brew-install/install.sh
/bin/bash -c "$(cat ./brew-install/install.sh)"
或者
cd /usr/local/
git clone -b stable https://mirrors.aliyun.com/homebrew/brew.git Homebrew
cd /usr/local/Homebrew/Library/Taps/homebrew/
git clone -b master https://mirrors.aliyun.com/homebrew/homebrew-core.git homebrew-core
git clone -b master https://mirrors.ustc.edu.cn/homebrew-cask.git homebrew-cask
echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles' >> ~/.bash_profile
source ~/.bash_profile
/usr/local/Homebrew/brew update --force

更新中科大源
cd "$(brew --repo)"
git remote set-url origin https://mirrors.ustc.edu.cn/brew.git
cd "$(brew --repo)/Library/Taps/homebrew/homebrew-core"
git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git
echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.bash_profile
source ~/.bash_profile

更新
brew update
brew services list
brew list
brew reinstall go
brew uninstall -f go

安装PHP
brew search php
brew install telnet wget nmap nginx mysql php php@7.2 php@7.3 brew-php-switcher pkg-config libmemcached
brew-php-switcher 7.2
echo 'export PATH="/usr/local/opt/php@7.2/bin:$PATH"' >> ~/.bash_profile
echo 'export PATH="/usr/local/opt/php@7.2/sbin:$PATH"' >> ~/.bash_profile
php -m
php -ini

pecl install memcached
brew services restart php
brew services restart nginx
brew services restart mysql
brew services restart memcached

brew tap exolnet/homebrew-deprecated
brew install php@7.0 php@7.1 -vvv
brew services start exolnet/deprecated/php@7.0
brew services start exolnet/deprecated/php@7.1
/usr/local/etc/php/7.0/
echo 'export PATH="/usr/local/opt/php@7.0/bin:$PATH"' >> ~/.bash_profile
echo 'export PATH="/usr/local/opt/php@7.0/sbin:$PATH"' >> ~/.bash_profile
source ~/.bash_profile
brew-php-switcher 7.0

cat /usr/local/var/log/php-fpm.log
dyld: Library not loaded: /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib
brew switch openssl 1.1.1f

初始化mysql数据库：
mysql_install_db
设置root账户和密码:
mysql_secure_installation

redis配置
vi /usr/local/etc/redis.conf
nginx配置
ll /usr/local/etc/nginx/
ll /usr/local/etc/php.ini
ll /usr/local/etc/php-fpm.conf

/usr/local/lib/php/pecl/20170718
ll /usr/local/etc/php/7.2/php.ini

pecl install mcrypt-1.0.1
/usr/local/Cellar/php@7.2/7.2.19_1/pecl/20170718/mcrypt.so

删除MYSQL
brew remove mysql
brew cleanup --force
launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
rm ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
sudo rm -rf /usr/local/var/mysql

其它数据库
brew install mariadb
brew install percona-server
brew install mongodb
brew install memcached
brew install redis

brew install webkit2png
brew install ImageMagick
brew install nmap wget
brew install mono
brew install python

brew install ansible
sudo mkdir /etc/ansible
sudo chmod u+w /etc/ansible
sudo vi /etc/ansible/ansible.cfg
[defaults]
deprecation_warnings = False
host_key_checking = False

安装应用APP
brew cask install mark-text
brew cask install react-native-debugger

删除
brew uninstall nginx

Mac Chrome调试 iPhone
brew update
brew unlink libimobiledevice ios-webkit-debug-proxy usbmuxd
brew uninstall --force libimobiledevice ios-webkit-debug-proxy usbmuxd
brew install --HEAD usbmuxd
brew install --HEAD libimobiledevice
brew install --HEAD ios-webkit-debug-proxy
npm install remotedebug-ios-webkit-adapter -g
*Iphone => 设置 => Safari 浏览器 => 高级 => web检查器 => 启用*
将Iphone手机连接电脑，必须点击“信任”，并打开 itunes, 以确保手机连接。
打开chrome, 输入网址： chrome://inspect/#devices

remotedebug_ios_webkit_adapter --port=9001
Discover network targets
+ localhost:9001

ios_webkit_debug_proxy -f chrome-devtools://devtools/bundled/inspector.html
打开：http://localhost:9221 查看设备：localhost:9222 ******
Port forwarding
+ 9222 localhost:9222
chrome-devtools://devtools/bundled/inspector.html?ws=localhost:9221/devtools/page/1

#zookeeper
brew install zookeeper
zkServer start
zkServer
zkServer status
zkCli
vi /usr/local/etc/zookeeper/zoo.cfg

#redis
brew install redis
redis-server /usr/local/etc/redis.conf
=============================================

----------- 从 PNG 转换到 JPG -----------
$ ls -1 *.png | xargs -n 1 bash -c 'convert "$0" "${0%.png}.jpg"'
----------- 从 JPG 转换到 PNG -----------
$ ls -1 *.jpg | xargs -n 1 bash -c 'convert "$0" "${0%.jpg}.png"'
brew install parallel
----------- 从 PNG 转换到 JPG -----------
$ parallel convert '{}' '{.}.jpg' ::: *.png
----------- 从 JPG 转换到 PNG -----------
$ parallel convert '{}' '{.}.png' ::: *.jpg
----------- 从 PNG 转换到 JPG -----------
$ ls -1 *.png | parallel convert '{}' '{.}.jpg'
----------- 从 JPG 转换到 PNG -----------
$ ls -1 *.jpg | parallel convert '{}' '{.}.png'
----------- 从 PNG 转换到 JPG -----------
$ bash -c 'for image in *.png; do convert "$image" "${image%.png}.jpg"; echo “image $image converted to ${image%.png}.jpg ”; done'
----------- 从 JPG 转换到 PNG -----------
$ bash -c 'for image in *.jpg; do convert "$image" "${image%.jpg}.png"; echo “image $image converted to ${image%.jpg}.png ”; done'
vi convert.sh
#!/bin/bash
#convert
for image in *.png; do
        convert  "$image"  "${image%.png}.jpg"
        echo “image $image converted to ${image%.png}.jpg ”
done
exit 0
======================================
在 macOS 预览图片时显示图片尺寸大小
brew cask install qlimagesize mdimagesizemdimporter
brew cask uninstall qlimagesize mdimagesizemdimporter
=================================================================
Darktable 是 Adobe Lightroom 的开源替代品，它是一款帮助专业摄影师的进行照片管理及后期处理的图形工具，用户可以通过该软件查看和编辑照片。
brew cask install darktable
==============================================================
brew cask install zenmap
brew cask install texmacs
==============================================================
Redis Desktop Manager
brew tap caskroom/cask
brew install caskroom/cask/brew-cask
brew cask install rdm
http://docs.redisdesktop.com/en/latest/install/#build-from-source
git clone --recursive https://github.com/uglide/RedisDesktopManager.git -b 2020 rdm && cd ./rdm
==============================================================
brew install masscan
masscan -p80,8000-8100 10.0.0.0/8 2603:3001:2d00:da00::/112
masscan -p80,8000-8100 10.0.0.0/8 2603:3001:2d00:da00::/112 --echo > xxx.conf
masscan -c xxx.conf --rate 1000
masscan 10.0.0.0/8 -p80 --banners --source-ip 192.168.1.200
masscan 2a00:1450:4007:810::/112 -p80 --banners --source-ip 2603:3001:2d00:da00:91d7:b54:b498:859d
masscan 10.0.0.0/8 -p80 --banners --source-port 61000
masscan 10.0.0.0/8 -p80 --banners --source-port 40000
masscan 0.0.0.0/0 -p0-65535
masscan 0.0.0.0/0 -p0-65535 --excludefile exclude.txt
masscan 0.0.0.0/0 -p0-65535 -oX scan.xml
masscan 0.0.0.0/0 -p0-65535 --max-rate 100000
