UOS服务器版本
yum info mysql nginx redis ffmpeg
yum install mysql mysql-server nginx redis ffmpeg
systemctl restart nginx redis mysqld

mysql
create schema dbname default character set utf8mb4;

sed -i 's/NO_AUTO_CREATE_USER,//' dbname.sql
mysql dbname < dbname.sql

yum install libreoffice-pdfimport libreoffice-langpack-zh-Hans libreoffice-langpack-zh-Hant libreoffice-ure libreoffice-ure-common libreoffice-base libreoffice-data libreoffice-impress libreoffice-x11 libreofficekit libreoffice-writer -y

或
yum install mysql nginx redis ffmpeg -y
systemctl restart nginx redis
vi /etc/profile
export PATH=$PATH:/usr/local/mysql/bin
source /etc/profile
mysqld --initialize --user=mysql
systemctl restart mysql
mysql -uroot -p
alter user 'root'@'localhost' identified by '123456';
flush privileges;

mysql -uroot -p
create schema dbname default character set utf8mb4;
use dbname;
source /data/dbname.sql;
或
mysql dbname < dbname.sql


https://github.com/dbeaver/dbeaver/releases
https://blog.csdn.net/Mathieu66/article/details/116131286

GIT 记住密码
git config --global credential.helper store

安装GO
whoami

vi ~/.bashrc
vi /etc/profile
export PATH=$PATH:/usr/local/go/bin:/home/$(whoami)/go/bin
source ~/.bashrc
source /etc/profile

wget https://studygolang.com/dl/golang/go1.17.12.linux-arm64.tar.gz
wget https://studygolang.com/dl/golang/go1.18.4.linux-arm64.tar.gz

wget https://studygolang.com/dl/golang/go1.17.12.linux-amd64.tar.gz
wget https://studygolang.com/dl/golang/go1.18.4.linux-amd64.tar.gz
sudo tar -C /usr/local/ -zxf go1.18.1.linux-amd64.tar.gz
go env
go env -w GOPROXY=https://goproxy.cn,direct

服务器版本下载地址
https://www.chinauos.com/resource/download-server

安装达梦数据库
https://www.dameng.com/list_103.html
https://eco.dameng.com/docs/zh-cn/faq/faq-db-check.html
DBeaver 驱动配置
https://www.renfei.net/posts/1003455
x86 WIN64
https://package.dameng.com/eco/adapter/DM8/202110/dm8_20211025_x86_win_64_ent.zip
AMD 海光 UOS20
https://package.dameng.com/eco/adapter/DM8/202110/dm8_20211021_x86_rh6_64_ent.zip
https://cdimage-download.chinauos.com/uniontechos-server-20-1040d-amd64.iso
ARM 鲲鹏 UOS20
https://package.dameng.com/eco/adapter/DM8/202110/dm8_20211025_HWarm_centos7_64_ent.zip
https://cdimage-download.chinauos.com/uniontechos-server-20-1040d-arm64.iso

虚拟机安装
Linux 版本 Debian 10.x 64位

sudo su
ifconfig
cp /etc/network/interfaces /etc/network/interfaces.bak
vi /etc/network/interfaces
vi /etc/network/interfaces.d/eth0
auto eth0
iface lo inet loopback
iface eth0 inet static
address 10.1.1.111
netmask 255.255.255.0
gateway 10.1.1.100
dns 114.114.114.114
reboot

sudo su
apt update
apt install -y openssh-server openssh-client
systemctl enable sshd
systemctl start sshd

远程管理
mkdir ~/.ssh
vi  ~/.ssh/authorized_keys

安装
sudo apt install -y wget
sudo apt install -y openssl nginx redis-server ffmpeg libreoffice mariadb-client
启动
sudo systemctl enable nginx redis-server
sudo systemctl restart nginx redis-server
sudo systemctl status nginx redis-server

apt install elinks
elinks 10.1.1.111

===================================================================================
2020年达梦运维干货
https://mp.weixin.qq.com/s/VObDXsrzwzSRPZ3MdQ_orw
https://mp.weixin.qq.com/s/XMTW18QAK_R5xltuhqKgnA
https://mp.weixin.qq.com/s/olRf_v9N-JAWC7KIiLfOMw
https://mp.weixin.qq.com/s/TBcRYOzxM5ymcGsPNImAiQ
https://mp.weixin.qq.com/s/vA3ay3X-Xp_gYv1ZiGz0hg
https://mp.weixin.qq.com/s/awV3vgHUa5r6gal8jnAkqw
https://mp.weixin.qq.com/s/U9m58BkNRKBDkbxSN19M9g
https://mp.weixin.qq.com/s/2_f05DCDeu1pySREpGfxdQ
https://mp.weixin.qq.com/s/Jj5ovLOtc5wNAul7bAFtyg
https://mp.weixin.qq.com/s/AuuVw_xFbY5xURWL3BIkkA
达梦数据库
sudo su
groupadd dmgroup
useradd -g dmgroup dmdba
#useradd -g dmgroup -m -d /home/dmdba -s /bin/bash dmdba
passwd dmdba
dm@DB2021

vi /etc/security/limits.conf
dmdba soft noproc 65536
dmdba hard noproc 65536
dmdba soft nofile 65536
dmdba hard nofile 65536
dmdba hard core unlimited
dmdba soft core unlimited
vi /etc/security/limits.d/20-nproc.conf
* soft nproc 65536
vi /etc/sysctl.conf
fs.file-max = 6815744
fs.aio-max-nr = 1048576
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 4194304
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576
vm.swappiness = 0
vm.dirty_background_ratio = 3
vm.dirty_ratio = 80
vm.dirty_expire_centisecs = 500
vm.dirty_writeback_centisecs = 100
sysctl -p

sudo su
ulimit -a
mkdir -p /home/dmdba
mkdir -p /home/dmdb/dmdbms
chown -R dmdba:dmgroup /home/dmdb
chomd -R 755 /home/dmdb

su - dmdba
#mount -o loop dm8_20211021_x86_rh6_64_ent.iso /opt/dm/
#cd /opt/dm

chmod u+x ./DMInstall.bin
./DMInstall.bin -i
选择安装目录：/home/dmdb/dmdbms

ls /etc/systemd/system/multi-user.target.wants/DmAPService.service
systemctl restart DmAPService
systemctl status DmAPService
systemctl stop DmAPService

vi ~/.bash_profile
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/home/dmdb/dmdbms/bin"
export DM_HOME="/home/dmdb/dmdbms"
export PATH=/home/dmdb/dmdbms/bin:/home/dmdb/dmdbms/tool:$PATH
export DM_INSTALL_TMPDIR=/tmp

cd /home/dmdb/dmdbms/bin
./dminit help
./dminit PATH=/home/dmdb/dmdbms/data DB_NAME=TRAINGO CHARSET=1 CASE_SENSITIVE=0 SYSDBA_PWD=TRAINGO123
./dmserver /home/dmdb/dmdbms/data/TRAINGO/dm.ini

/home/dmdb/dmdbms/script/root/dm_service_installer.sh -h
/home/dmdb/dmdbms/script/root/dm_service_installer.sh -t dmserver -p DMSERVER -dm_ini /home/dmdb/dmdbms/data/TRAINGO/dm.ini
systemctl restart DmServiceDMSERVER
systemctl stop DmServiceDMSERVER
systemctl status DmServiceDMSERVER

disql SYSDBA/TRAINGO123
disql SYSDBA/TRAINGO123@127.0.0.1:5236

select * from v$dm_ini;
select TOP_SQL_TEXT from v$sql_history;

SELECT CASE_SENSITIVE();
SELECT SF_GET_PAGE_SIZE();
SELECT SF_GET_EXTENT_SIZE();
SELECT SF_GET_UNICODE_FLAG();
SELECT (CASE SF_GET_UNICODE_FLAG() WHEN '0' THEN 'GBK18030' WHEN '1' THEN 'UTF-8' WHEN '2' THEN 'EUC-KR' END);
select expired_date from  v$license;
select * from  V$SYSTEMINFO;
select * from  v$sessions;
select  count(*),state from v$sessions group by state;
select  count(*),clnt_ip from v$sessions group by clnt_ip;
SELECT CLNT_HOST,CLNT_IP,OSNAME FROM V$SESSIONS;

select * from dba_objects where OBJECT_TYPE='TABLE';

SP_SET_PARA_VALUE(2,'MAX_SESSIONS', 1000);
SP_SET_PARA_VALUE(2,'MAX_SESSION_STATEMENT', 20000);

select * from  user_tables;
select svr_version FROM v$instance

SELECT SF_GET_SCHEMA_NAME_BY_ID(CURRENT_SCHID());
SELECT TABLE_NAME FROM DBA_TABLES WHERE OWNER='DM';
SELECT TABLE_NAME FROM DBA_TABLES WHERE OWNER='TRAINGO';
select * from DBA_TABLES where owner = 'DM' and table_name = 't1';

select '实例名称' 数据库选项,INSTANCE_NAME 数据库集群相关参数值 FROM v$instance union all
select '数据库版本',substr(svr_version,instr(svr_version,'(')) FROM v$instance union all   SELECT '字符集',CASE SF_GET_UNICODE_FLAG() WHEN '0' THEN 'GBK18030' WHEN '1' then 'UTF-8' when '2' then 'EUC-KR' end union all
SELECT '页大小',cast(PAGE()/1024 as varchar) union all   SELECT '簇大小',cast(SF_GET_EXTENT_SIZE() as varchar) union all
SELECT '大小写敏感',cast(SF_GET_CASE_SENSITIVE_FLAG() as varchar) union all
select '数据库模式',MODE$ from v$instance union all
select '唯一魔数',cast(permanent_magic as varchar) union all
select 'LSN',cast(cur_lsn as varchar) from v$rlog;

select (select sum(n_pages * page_size) from v$bufferpool) + (select sum(total_size) from v$mem_pool) from dual;

alter database resize logfile 'D:\dmdbms\data\DAMENG\DAMENG01.log' to 2048;
alter database resize logfile 'D:\dmdbms\data\DAMENG\DAMENG02.log' to 2048;

---查询主键
SELECT a.OWNER as "模式名",a.TABLE_NAME as "表名",b.COLUMN_NAME as "列名", a.CONSTRAINT_NAME as "约束名"
from DBA_CONSTRAINTS a, ALL_CONS_COLUMNS b where a.CONSTRAINT_NAME=b.CONSTRAINT_NAME and CONSTRAINT_TYPE='P';

---查询外键
SELECT a.OWNER as "模式名",a.TABLE_NAME as "表名",b.COLUMN_NAME as "列名", a.CONSTRAINT_NAME as "约束名"
from DBA_CONSTRAINTS a, ALL_CONS_COLUMNS b where a.CONSTRAINT_NAME=b.CONSTRAINT_NAME and CONSTRAINT_TYPE='R';

---查询唯一约束
SELECT a.OWNER as "模式名",a.TABLE_NAME as "表名",b.COLUMN_NAME as "列名", a.CONSTRAINT_NAME as "约束名"
from DBA_CONSTRAINTS a, ALL_CONS_COLUMNS b where a.CONSTRAINT_NAME=b.CONSTRAINT_NAME and CONSTRAINT_TYPE='U';

---查询check约束
SELECT a.OWNER as "模式名",a.TABLE_NAME as "表名",b.COLUMN_NAME as "列名", a.CONSTRAINT_NAME as "约束名",SEARCH_CONDITION as "CHECK约束的条件"
from DBA_CONSTRAINTS a, ALL_CONS_COLUMNS b where a.CONSTRAINT_NAME=b.CONSTRAINT_NAME and CONSTRAINT_TYPE='C';

---查询默认列
SELECT OWNER as "模式名",TABLE_NAME as "表名",COLUMN_NAME as "列名",DATA_TYPE as "列类型",DATA_DEFAULT as "默认值" FROM DBA_TAB_COLUMNS WHERE DATA_DEFAULT IS NOT NULL;

---查询非空列
SELECT OWNER as "模式名",TABLE_NAME as "表名",COLUMN_NAME as "列名",DATA_TYPE as "列类型" FROM DBA_TAB_COLUMNS WHERE NULLABLE ='Y';

select id_code;
select * from v$version;
select sysdate;
conn SYSDBA/SYSDBA@localhost
disconn
select t.table_name,t.num_rows from user_tables t;
select name,create_time,status$,total_size,open_count,startup_count,last_startup_time from v$database;
select name, instance_name, instance_number, host_name, start_time, status$ from v$instance;
select table_name from all_tables;
desc all_tables;
select * from all_tab_comments;
select * from user_tab_comments;
select * from all_col_comments;
select * from user_col_comments;
select * from all_tab_columns;
select * from user_tab_columns;
select t.table_name,t.comments from user_tab_comments t;
select r1, r2, r3, r5
from (select a.table_name r1, a.column_name r2, a.comments r3 from user_col_comments a),
    (select t.table_name r4, t.comments r5 from user_tab_comments t)
where r4 = r1;

select top 5 name, type, value, sys_value, file_value from v$parameter;
select top 5 para_name, para_value from v$dm_ini;

select SF_GET_PARA_VALUE(2,'SORT_BUF_SIZE');
select para_name,para_value from v$dm_ini where para_name='SORT_BUF_SIZE';
ALTER SYSTEM SET 'SORT_BUF_SIZE'=200 DEFERRED MEMORY;
SP_SET_PARA_VALUE (1,'HFS_CACHE_SIZE',320);

ALTER SESSION SET 'HAGR_HASH_SIZE'=2000000;

SP_SET_PARA_VALUE (2,'MAX_SESSIONS',2000);


database TRAINGO;
alter database mount;
alter database open;
alter database suspend;

select * from dba_role_privs where grantee = 'DM';

CREATE USER DM IDENTIFIED BY "dameng123";
GRANT RESOURCE TO DM;
GRANT SELECT ON dmhr.employee TO DM;
GRANT SELECT ON dmhr.department TO DM;
SELECT username,account_status,created FROM dba_users;
conn DM/dameng123;
SELECT user FROM DUAL;
CREATE TABLE employee
(
  employee_id INTEGER,
  employee_name VARCHAR2(20) NOT NULL,
  hire_date DATE,
  salary INTEGER,
  department_id INTEGER NOT NULL
);
CREATE TABLE department
(
  department_id INTEGER PRIMARY KEY,
  department_name VARCHAR(30) NOT NULL
);
CREATE TABLE department2
(
  department_id INTEGER PRIMARY KEY,
  department_name NVARCHAR(30) NOT NULL
);
ALTER TABLE employee MODIFY( hire_date not null);
ALTER TABLE employee ADD constraint pk_empid PRIMARY KEY(employee_id);
ALTER TABLE employee ADD constraint fk_dept FOREIGN KEY (department_id) REFERENCES department (department_id);
DESC employee;
SELECT table_name, constraint_name, constraint_type FROM all_constraints WHERE owner='DM' AND table_name='EMPLOYEE';
CREATE TABLE t1 AS SELECT rownum AS id, trunc(dbms_random.value(0, 100)) AS random_id, dbms_random.string('x', 20) AS random_string FROM dual connect BY level <= 100000;
SELECT COUNT(*) FROM t1;
SELECT * FROM t1 where rownum<5 ORDER BY id DESC;

CREATE INDEX ind_emp_salary ON employee(salary);
SELECT table_name, index_name, index_type from user_indexes WHERE index_name='IND_EMP_SALARY';
DROP INDEX IND_EMP_SALARY;

CREATE SEQUENCE SEQ1
START WITH 1 INCREMENT BY 1 MAXVALUE 10000
CACHE 5 NOCYCLE;
SELECT seq1.nextval() FROM dual;
SELECT seq1.currval() FROM dual;

CREATE OR REPLACE FUNCTION random_password
(pass_len IN NUMBER) RETURN VARCHAR2 AS
l_pw VARCHAR2(128);
BEGIN l_pw = dbms_random.string('x', pass_len);
RETURN l_pw;
END;
SELECT random_password(12) FROM dual;


级联删除
drop user 用户名 cascade;

backup database full backupset '/home/dmdba/DB_BAK_FULL01';
create table ttt as select * from dba_objects;
create table tt as select * from dba_objects;
show backupset '/home/dmdba/DB_BAK_FULL01';

restore database '/data/dmdata/TEST2/dm.ini' from backupset '/home/dmdba/DB_BAK_FULL01';
recover database '/data/dmdata/TEST2/dm.ini' with archivedir '/data/dmarch/stb_arch' use db_magic 1125819454;
recover database '/data/dmdata/TEST2/dm.ini' update db_magic;

create user 用户名 identified by 密码 default tablespace users Temporary TABLESPACE Temp;
create user test11 identified by test default tablespace users Temporary TABLESPACE Temp;
grant connect,resource, dba to 用户名;
grant connect,resource,dba to test11;
grant sysdba to 用户名;
grant sysdba to test11;
commit;

alter user 用户名 identified by 密码;
alter user sys indentified by test;
alter user system indentified by test;

select
 t1.owner 原始表用户名,
  t1.table_name 原始表,
  t2.owner as 被依赖表用户名,
      t2.table_name as  被依赖的表,
      t1.constraint_name 外键名称,
      a1.column_name 列,
      a2.column_name as  被依赖的列
from dba_constraints t1, dba_constraints t2, dba_cons_columns a1, dba_cons_columns a2
where
     t1.r_constraint_name = t2.constraint_name and
     t1.constraint_name = a1.constraint_name and
     t1.r_constraint_name = a2.constraint_name
     order by t1.owner;

select '实例名称' 数据库选项,INSTANCE_NAME  数据库集群相关参数值 FROM v$instance union all
select top 1 '数据库版本', banner ||'.'||id_code from v$version
union all
SELECT '字符集',CASE SF_GET_UNICODE_FLAG() WHEN '0' THEN 'GBK18030' WHEN '1' then 'UTF-8' when '2' then 'EUC-KR' end union all
SELECT '页大小',cast(PAGE()/1024 as varchar) union all
SELECT '簇大小',cast(SF_GET_EXTENT_SIZE() as varchar) union all
SELECT '大小写敏感',cast(SF_GET_CASE_SENSITIVE_FLAG() as varchar) union all
select '数据库模式',MODE$ from v$instance;

select
       b.table_name,
       a.name COL_NAME
from
       SYS.SYSCOLUMNS a,
       all_tables b    ,
       sys.sysobjects c
where
       a.INFO2=1
   and a.id           =c.id
   and c.name         = b.table_name;

SELECT F.TABLESPACE_NAME,
(T.TOTAL_SPACE - F.FREE_SPACE) / 1024 "USED (GB)",
F.FREE_SPACE / 1024 "FREE (GB)",
T.TOTAL_SPACE / 1024 "TOTAL(GB)",
(ROUND((F.FREE_SPACE / T.TOTAL_SPACE) * 100)) || '% '
PER_FREE
FROM (SELECT TABLESPACE_NAME,
ROUND(SUM(BLOCKS *
(SELECT PARA_VALUE / 1024
FROM V$DM_INI
WHERE PARA_NAME =
'GLOBAL_PAGE_SIZE') / 1024)) FREE_SPACE
FROM DBA_FREE_SPACE
GROUP BY TABLESPACE_NAME) F,
(SELECT TABLESPACE_NAME, ROUND(SUM(BYTES /
1048576)) TOTAL_SPACE
FROM DBA_DATA_FILES
GROUP BY TABLESPACE_NAME) T
WHERE F.TABLESPACE_NAME = T.TABLESPACE_NAME;

conn DM/dameng123;

CREATE TABLE "TAB_12"
(
"ID" BIGINT IDENTITY (1, 1) NOT NULL,
"ID2" INT NOT NULL,
"NAME" VARCHAR(10) NOT NULL,
PRIMARY KEY("ID")
);
INSERT INTO TAB_12 VALUES(1, '数据库产品');
INSERT INTO TAB_12 VALUES(2, '数据库');
select * from TAB_12;

CREATE TABLE "TAB_11"
(
"ID" BIGINT IDENTITY (1, 1) NOT NULL,
"NAME" VARCHAR2(10) NOT NULL,
PRIMARY KEY("ID")
);
insert into TAB_11 VALUES('数据库产品');
insert into TAB_11 VALUES('数据库产品产品');

CREATE TABLE "TAB_10"
(
"ID" tinyint NOT NULL,
"NAME" VARCHAR2(10) NOT NULL,
PRIMARY KEY("ID")
);
insert into TAB_10 VALUES(100, '数据库产品');

CREATE TABLE "TAB_09"
(
"ID" smallint NOT NULL,
"NAME" VARCHAR2(10) NOT NULL,
PRIMARY KEY("ID")
);
insert into TAB_09 VALUES(100, '数据库产品');

CREATE TABLE "TAB_08"
(
"ID" decimal(8,2) NOT NULL,
"NAME" VARCHAR2(10) NOT NULL,
PRIMARY KEY("ID")
);
insert into TAB_08 VALUES(100.12, '数据库产品');

CREATE TABLE "TAB_07"
(
"ID" int NOT NULL,
"NAME" text NOT NULL,
PRIMARY KEY("ID")
);
insert into TAB_07 VALUES(1, '数据库产品');

CREATE TABLE DM.NewTable2 (
	ID int IDENTITY (1, 1) NOT NULL,
	Column2 varchar(100) DEFAULT '' NOT NULL,
	Column1 tinyint DEFAULT 0 NOT NULL,
	PRIMARY KEY("ID")
);

CREATE INDEX NewTable1_Column1_IDX ON DM.NewTable1 (Column1);

SELECT TABLE_NAME FROM DBA_TABLES WHERE OWNER='DM';

DROP USER TGLEARNING;
CREATE USER TGLEARNING IDENTIFIED BY "TGLEARNING2021";
GRANT RESOURCE TO TGLEARNING;
conn TGLEARNING/TGLEARNING2021@127.0.0.1:5236;

start /tmp/traingo-dameng.sql

SET IDENTITY_INSERT 表名 ON;
SET IDENTITY_INSERT 表名 OFF;
commit;

start file.sql

./dmrachk help
./dmrachk ARCH_PATH=/data/dmarch/stb_arch

cd /home/dmdb/dmdbms/tools
./manager

查看内存池情况
SELECT
A.CREATOR  ,
        B.SQL_TEXT                    ,
        A.NAME                        ,
        A.TOTAL_SIZE/1024/1024 TOTAL_M,
        A.DATA_SIZE /1024/1024 DATA_SIZE_M
FROM
        V$MEM_POOL A,
        V$SESSIONS B
WHERE
        A.CREATOR = B.THRD_ID AND B.APPNAME='DIsql.exe';

SELECT
        A.CREATOR                          ,
        B.SQL_TEXT                         ,
        SUM(A.TOTAL_SIZE)/1024/1024 TOTAL_M,
        SUM(A.DATA_SIZE) /1024/1024 DATA_SIZE_M
FROM
        V$MEM_POOL A,
        V$SESSIONS B
WHERE
        A.CREATOR = B.THRD_ID
    AND B.APPNAME ='DIsql.exe'
GROUP BY
        A.CREATOR,
        B.SQL_TEXT
ORDER BY
        TOTAL_M DESC;

SELECT SF_GET_SESSION_SQL(SESSID),MAX_MEM_USED,SQL_TXT FROM V$SQL_STAT ORDER BY MAX_MEM_USED DESC;
SELECT * FROM V$LARGE_MEM_SQLS ORDER BY MEM_USED_BY_K DESC;

查询数据库大版本号：
Select * from v$version;
查询小版本号：
Select id_code;
查询数据文件和联机日志文件信息
select b.tablespace_name, b.file_name, b.bytes/1024/1024 size_m
  from dba_data_files b
 union all 
select 'RLOG', a.path, a.rlog_size/1024/1024
  from v$rlogfile a;
查询表空间占用率
select b.file_name,
       b.tablespace_name,
       b.bytes/1024/1024 size_m,
       (b.bytes-(nvl(a.bytes,0)))/1024/1024  used_m,
       round((b.bytes-(nvl(a.bytes,0)))/(b.bytes)*100,2)  usedrate
  from dba_free_space a,dba_data_files b
 where a.file_id(+) = b.file_id
   and a.tablespace_name(+) = b.tablespace_name
 order by b.tablespace_name;
查看模式和用户的对应关系
select a.NAME schname, a.ID schid, b.id userid, b.NAME username
  from sysobjects a, sysobjects b
where a."TYPE$"='SCH'
  and a.pid = b.id;
查看模式下所有对象信息
select a.object_name, a.object_id, a.object_type, a.created, a.status
 from dba_objects a
 where a.owner='DMHR';   -- 用户/模式名
批量禁用某个用户/模式下所有外键约束
      将查询出的拷贝执行即可禁用外键约束。
select 'alter table '|| t.owner||'.'||t.table_name ||' disable constraint '||t.constraint_name||';'
  from dba_constraints t
 where t.owner = 'DMHR'   -- 用户/模式名
   and t.constraint_type = 'R';
查看系统外键约束的引用关系
    查询某个用户或模式下外键约束的引用关系：
select t1.owner,t1.table_name, 
       t2.table_name as "TABLE_NAME(R)", 
       t1.constraint_name, 
       t1.r_constraint_name as "CONSTRAINT_NAME(R)",
       a1.column_name, 
       a2.column_name as "COLUMN_NAME(R)"
from dba_constraints t1, dba_constraints t2, dba_cons_columns a1, dba_cons_columns a2
where t1.owner = t2.owner and a1.owner = a2.OWNER and t1.owner = 'DMHR' 
  and t1.r_constraint_name = t2.constraint_name
  and t1.constraint_name = a1.constraint_name
  and t1.r_constraint_name = a2.constraint_name;
查看系统中的作业信息：
select t.job, t.schema_user, t.last_date, t.last_sec, t.next_date, t.next_sec, t."INTERVAL", t.broken, t.failures,t.what
  from dba_jobs t;
运行作业
call dbms_job.run(1637544901);   --参数为jobid
历史作业运行情况
select * from sysjob.SYSJOBHISTORIES2;
查看会话信息
select t.SESS_ID, t.SQL_TEXT, t.STATE, t.TRX_ID, t.THRD_ID
  from v$sessions t;
查看当前会话
select sessid;
事务等待
使用如下sql查询数据库中的事务等待信息，如果为空，则表示当前无事务等待。
select * from v$trxwait;
或
select b.name, t.*
 from v$lock t, SYSOBJECTS b
 where t.BLOCKED = 1
   and t.TABLE_ID = b.ID;
某个会话的历史sql信息
  select * from V$SQL_HISTORY t where T.SESS_ID = '140577090115912';  --会话id

多版本操作冲突过多
修改 dm.ini 文件里的参数：MVCC_RETRY_TIMES = 11 数据调大，默认是5，然后重启数据库。
SP_SET_PARA_VALUE (2,'MVCC_RETRY_TIMES',11);

DM关键字
select * from V$RESERVED_WORDS where RESERVED='Y'


优化
select PARA_NAME,PARA_VALUE from v$dm_ini where para_name in('MEMORY_POOL','MEMORY_TARGET','BUFFER','MAX_BUFFER','MAX_SESSIONS')
cat /home/dmdb/dmdbms/data/TRAINGO/dm.ini | grep -E "MEMORY_POOL|MEMORY_TARGET|BUFFER|SESSIONS"
MEMORY_POOL 建议为内存的 90%  1800
MEMORY_TARGET   建议为内存的 90%  1800
BUFFER  建议为内存的 60%  1200
MAX_BUFFER  建议为内存的 70%  1400
MAX_SESSIONS        1000

开启
SP_SET_PARA_VALUE(1,'ENABLE_MONITOR',1);
SP_SET_PARA_VALUE(1,'MONITOR_TIME',1);

查看慢查询
select * from V$LONG_EXEC_SQLS order by exec_time desc；
或者
select * from V$SYSTEM_LONG_EXEC_SQLS order by exec_time desc;
select * from v$sql_history order by time_used desc

1、设置开启日志
https://www.modb.pro/topic/73447
https://www.modb.pro/db/28221 #达梦数据库开启SQL日志记录
https://www.modb.pro/db/26095 #达梦数据库的几种模式及状态说明
https://www.modb.pro/db/57299 #达梦数据库物理备份恢复_联机拷贝数据库
https://www.modb.pro/db/216194 #DM8 数据库主备/读写分离集群增加节点
https://www.modb.pro/db/215854 #使用DMFLDR工具将Excel数据导入到达梦数据库


LOG记录的语句类型掩码，是一个格式化的字符串，表示一个32位整数上哪一位将被置为1，置为1的位则表示该类型的语句要记录，格式为：位号:位号:位号。列如：3:5:7表示第3，第5，第7位上的值被置为1。每一位的含义见下面说明（2~17前提是:SQL标记位24也要置)：
1 全部记录(全部记录并不包含原始语句)
2 全部 DML 类型语句
3 全部 DDL 类型语句
4 UPDATE 类型语句(更新)
5 DELETE 类型语句(删除)
6 INSERT 类型语句(插入)
7 SELECT 类型语句(查询)
8 COMMIT 类型语句(提交)
9 ROLLBACK 类型语句(回滚)
10 CALL 类型语句(过程调用)
11 BACKUP 类型语句(备份)
12 RESTORE 类型语句(恢复)
13 创建对象操作(CREATE DDL)
14 修改对象操作(ALTER DDL)
15 删除对象操作(DROP DDL)
16 授权操作(GRANT DDL)
17 回收操作(REVOKE DDL)
22 绑定参数
23 存在错误的语句（语法错误，语义分析错误等）
24 是否需要记录执行语句
25 是否需要打印计划和语句和执行的时间
26 是否需要记录执行语句的时间
27 原始语句（服务器从客户端收到的未加分析的语句）
28 是否记录参数信息，包括参数的序号、数据类型和值
29 是否记录事务相关事件
--设置SQL过滤规则，只记录必要的SQL，生产环境不要设成1
--   2 只记录DML语句    3 只记录DDL语句   22 记录绑定参数的语句
--   25 记录SQL语句和它的执行时间    28 记录SQL语句绑定的参数信息
SF_SET_SYSTEM_PARA_VALUE('SQL_TRACE_MASK','2:3:5:22:25:28',0,1);
--同步日志会严重影响系统效率，生产环境必须设置为异步日志
SF_SET_SYSTEM_PARA_VALUE('SVR_LOG_ASYNC_FLUSH',1,0,1);
--下面这个语句设置只记录执行时间超过200ms的语句
SF_SET_SYSTEM_PARA_VALUE('SVR_LOG_MIN_EXEC_TIME',200,0,1);

select PARA_NAME,PARA_VALUE from v$dm_ini where para_name in('SQL_TRACE_MASK','SVR_LOG_ASYNC_FLUSH','SVR_LOG_MIN_EXEC_TIME')

--开启SQL日志：
SP_SET_PARA_VALUE(1, 'SVR_LOG', 1);
--关闭SQL日志：
SP_SET_PARA_VALUE(1, 'SVR_LOG', 0);

生成sql日志
日志默认路径是log/dmsql_'sid'.log
日志是不断累加的，过期无用的sql日志可以删除文件，可截取某时间段的日志。
sql.log日志的配置文件/data/DAMENG/sqllog.ini
sqllog.ini
BUF_TOTAL_SIZE          = 10240         #SQLs Log Buffer Total Size(K)(1024~1024000)
BUF_SIZE                = 1024          #SQLs Log Buffer Size(K)(50~409600)
BUF_KEEP_CNT            = 6             #SQLs Log buffer keeped count(1~100)
[SLOG_ALL]
    FILE_PATH    = /dmdata/data/log     #sqllog存放位置
    PART_STOR    = 0
    SWITCH_MODE  = 2          #0代表不切换  2代表按照文件大小切换
    SWITCH_LIMIT   = 256     #文件大小256M
    ASYNC_FLUSH   = 1         #异步刷日志
    FILE_NUM = 10            #生成的SQLLOG个数
    ITEMS    = 0
    SQL_TRACE_MASK  = 1       #全部类型的sql
    MIN_EXEC_TIME = 0
    USER_MODE   = 0           #0为记录所有的用户
    USERS =
如果对 sqllog.ini 进行了修改，可通过调用以下函数即时生效，无需重启数据库，如下所示：

SP_REFRESH_SVR_LOG_CONFIG();

获取日志分析
用java执行jar包分析日志文件
到jar包的目录
Dmlog_DM7_6.0.jar
Dmlog_DM7_5.1.jar
命令行：
java.exe -jar Dmlog_DM7_5.1.jar                (可以在电脑自己安装jdk，也可以dm自带的jdk）

可以在用本机的数据库分析，也可以远程，数据库的页大小和块大小为32不然会报错：记录超长
文件夹的路径，要单独为分析日志设置文件夹，因为会分析文件夹内所有文件，可以多个日志，可以带入参数
生成的文件在当前目录

用DM自带的monitor工具.../tool/目录下


===================================================================================
或者
dpkg -i nginx

或者编译安装
apt install build-essential libtool libpcre3 libpcre3-dev zlib1g-dev openssl

wget https://udomain.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz && tar xzf pcre-8.43.tar.gz
wget https://www.zlib.net/zlib-1.2.11.tar.gz && tar xzf zlib-1.2.11.tar.gz
wget https://www.openssl.org/source/openssl-1.1.1l.tar.gz && tar xzf openssl-1.1.1l.tar.gz
https://www.openssl.org/source/openssl-1.1.1m.tar.gz
wget https://nginx.org/download/nginx-1.20.2.tar.gz && tar zxf nginx-1.20.2.tar.gz
make && make install

apt install snapd
snap install redis-desktop-manager

ffmpeg
apt install yasm
wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 && tar -jxvf ffmpeg-snapshot.tar.bz2
./configure --prefix=/usr/local/ffmpeg --enable-debug=3 --disable-static --enable-shared
make -j4 && sudo make install

add-apt-repository ppa:jonathonf/ffmpeg-4
apt update
apt install ffmpeg -y

libreoffice
访问权限不足
sudo rm ~/.config/libreoffice –rf



https://www.modb.pro/db/171876

dminit HELP
格式: dminit KEYWORD=value
例如: dminit PATH=c:\dmdata PAGE_SIZE=16
关键字 说明（默认）
-----------------------------------------------------------------------------
INI_FILE 初始化文件 dm.ini 存放的路径
PATH 初始数据库存放的路径
CTL_PATH 控制文件路径
LOG_PATH 日志文件路径
EXTENT_SIZE 数据文件使用的簇大小(16)，可选值：16、32、64，单位：页
PAGE_SIZE 数据页大小(8)，可选值：4、8、16、32，单位：K
LOG_SIZE 日志文件大小(256)，单位为：M，范围为：64M ~ 2G
CASE_SENSITIVE 大小敏感(Y)，可选值：Y/N，1/0
CHARSET/UNICODE_FLAG 字符集(0)，可选值：0[GB18030]，1[UTF-8]，2[EUC-KR]
SEC_PRIV_MODE 权限管理模式(0)，可选值：0[TRADITION]，1[BMJ]，2[EVAL]
LENGTH_IN_CHAR VARCHAR 类型长度是否以字符为单位(N)，可选值：Y/N，1/0
SYSDBA_PWD 设置 SYSDBA 密码(SYSDBA)，密码长度为 9 到 48
SYSAUDITOR_PWD 设置 SYSAUDITOR 密码(SYSAUDITOR)，密码长度为 9 到 48
DB_NAME 数据库名(DAMENG)
INSTANCE_NAME 实例名(DMSERVER)
PORT_NUM 监听端口号(5236)
BUFFER 系统缓存大小(100)，单位 M
TIME_ZONE 设置时区(+08:00)
PAGE_CHECK 页检查模式(0)，可选值：0/1/2
EXTERNAL_CIPHER_NAME 设置默认加密算法

mysql 数据迁移到 pgsql
https://pgloader.readthedocs.io/en/latest/ref/mysql.html
apt install pgloader postgresql-client postgresql-11
yum install pgloader postgresql postgresql-server
brew install pgloader postgresql postgresql-server

vi /etc/postgresql/11/main/postgresql.conf
listen_addresses = '10.1.1.111'
vi /etc/postgresql/11/main/pg_hba.conf
host all all 0.0.0.0/0 md5

systemctl restart postgresql
lsof -i:5432

创建帐号
sudo -u postgres createuser traingo -P
sudo -u postgres createuser --superuser tgroot -P
sudo -u postgres createdb quotes -O pgloader
或者
sudo -u postgres -i
deleteuser traingo
createuser traingo -P
createuser --superuser tgroot -P
createdb tgtest -O traingo -E UTF8 -e
createdb tglearning -O tgroot -E UTF8 -e

psql postgres://traingo:traingo123@localhost/tgtest?sslmode=require
psql -U traingo -d tgtest -h 10.1.1.111 -W
psql -U tgroot -d tglearning -h 10.1.1.111 -W -p 5432
psql -U tgroot -d tglearning -h 127.0.0.1 -W -p 5436

同步MYSQL数据
vi pgload.load
LOAD DATABASE
    FROM mysql://root:123456@10.1.1.96:3001/51learning
    INTO pgsql://tgroot:123456@10.1.1.111:5432/tglearning

WITH include drop, create tables, create indexes, reset sequences, workers = 8, concurrency = 1,
    multiple readers per thread, rows per range = 50000

ALTER SCHEMA '51learning' RENAME TO 'public'
;
pgloader pgload.load


createdb newdb
pgloader ./test/sqlite/sqlite.db postgresql:///newdb
createdb pagila
pgloader mysql://user@localhost/sakila postgresql:///pagila
createdb target_db
pgloader load.csv pgsql://sammy:password@localhost/target_db

sudo -u postgres psql
\c quotes
\dt
select * from quotes.quotes limit 1;

vi pgload.load
LOAD DATABASE
    FROM mysql://root:einverne.@localhost:3306/wordpress
    INTO pgsql://pgloader:einverne.@localhost:5432/quotes

WITH include drop, create tables, create indexes, reset sequences, workers = 8, concurrency = 1,
    multiple readers per thread, rows per range = 50000

SET PostgreSQL PARAMETERS
    maintenance_work_mem to '128MB',
    work_mem to '12MB',
    search_path to 'sakila, public, "$user"'

SET MySQL PARAMETERS
    net_read_timeout  = '120',
    net_write_timeout = '120'

CAST type bigint when (= precision 20) to bigserial drop typemod,
    type date drop not null drop default using zero-dates-to-null,
    -- type tinyint to boolean using tinyint-to-boolean,
    type year to integer

ALTER TABLE NAMES MATCHING 'film' RENAME TO 'films'

ALTER SCHEMA 'wordpress' RENAME TO 'public'
;
pgloader pgload.load


LOAD DATABASE
     FROM mysql://username:password@host/gitlabhq_production
     INTO postgresql://gitlab-psql@unix://var/opt/gitlab/postgresql:/gitlabhq_production

WITH include no drop, truncate, disable triggers, create no tables,
     create no indexes, preserve index names, no foreign keys,
     data only

SET MySQL PARAMETERS
net_read_timeout = '90',
net_write_timeout = '180'

ALTER SCHEMA 'gitlabhq_production' RENAME TO 'public'
;


pgloader --type csv --field "综合资源网元ID,CU名称" -L "/home/adminz/v_device_wireless_cu.log" --with truncate --with "skip header=1" --with "batch rows=10000" --with "fields terminated by ','" /home/adminz/V_DEVICE_WIRELESS_CU.csv postgres://postgres:root@10.9.20.222:35432/npas055?tablename=mtnoh.v_device_wireless_cu
pgloader --type csv --field "directory,lat,lon,flag,alt,passeddate,gpsdate,gpstime" --with "skip header = 6"  --with "fields terminated by ','" txtfile.txt postgres://myusername:mypass@192.102.xx.xx:5432/dbname?tablename=plt

LOAD CSV
     FROM '/LocationToCSVFile/a.csv' WITH ENCODING UTF8 (COLUMN1,COLUMN2)
    INTO postgresql://netcrk:crknet@[fd95:ff55:7fb8:f1e5:f816:3eff:fe5d:96b7]:5432/postgres
    TARGET TABLE TESTACCOUNT(COLUMN1,COLUMN2)

      WITH  TRUNCATE,
       SKIP HEADER = 0,
       FIELDS OPTIONALLY ENCLOSED BY '"',
       FIELDS TERMINATED BY ','

      SET CLIENT_ENCODING TO 'UTF8,
            work_mem to '128MB',
          standard_conforming_strings to 'on'

    BEFORE LOAD DO $$ CREATE SCHEMA IF NOT EXISTS PUBLIC; $$,
 $$ CREATE TABLE IF NOT EXISTS PUBLIC.TESTACCOUNT(COLUMN1 INTEGER,COLUMN2 INTEGER); 
 $$;

PostgreSQL基准测试工具pgbench
https://mp.weixin.qq.com/s/2n35vbYNVvmeVObxzGEetA
pgbench -n -c 6 -f bench.sql -t 10000 test
pg_basebackup -Fp -Xs -R -p 5432 -D pgdata && pg_ctl -D pgdata start
Heroku PostgreSQL[^38]、Compose PostgreSQL[^39]、Amazon RDS for PostgreSQL[^40]或Google Cloud SQL for PostgreSQL[^41
我们使用pgstattuple扩展来获取psql 的索引统计信息：
SELECT i.indexrelid::regclass AS index,
       s.index_size,
       s.avg_leaf_density
FROM pg_index AS i
   CROSS JOIN LATERAL pgstatindex(i.indexrelid) AS s
WHERE indrelid = 'testtab'::regclass;

在线实训环境 Oracle PostgreSQL MySQL openGauss Redis
https://www.modb.pro/marketlist?type=1
PostgreSQL
https://mp.weixin.qq.com/s/IE468UjBq62l5aqZ6VQaOQ
https://mp.weixin.qq.com/s/Z4hGGJXM0EWnbRU5b2nUxQ
https://mp.weixin.qq.com/s/L1G-rh5t_X9puzmmmy26Ow
https://mp.weixin.qq.com/s/WRn0s7fsbMw9if3vMuG_1g
patroni + etcd + haproxy  + keepalived
https://mp.weixin.qq.com/s/UfpAY2Ycv-ol92mGKIIWVg
ps -axjf | grep postgres
https://mp.weixin.qq.com/s/PmHriAAPcwEFcFMJfeW6Gw
https://mp.weixin.qq.com/s/FlrbHK-4cNuP0etDWnigRw
https://mp.weixin.qq.com/s/2NbKaUieMmQ5ViMZH_cZDA
https://mp.weixin.qq.com/s/ezXhE9YfKARZi23kYREV_g
https://mp.weixin.qq.com/s/v3x50OwrD8eiB9dKu85yPw
https://mp.weixin.qq.com/s/W_JjRfjZzJrbMG_GvD32vA
https://mp.weixin.qq.com/s/wirNzZuN7CU86hq6qGUsag

https://mp.weixin.qq.com/s/re4UV7XyqJy3v0iN4UTvpg 自定义tinyint类型

0 0 * * * pg_dump --no-password -U user db_name > backup.sql
为了安全起见不要直接输入密码，而是应该将密码加入 .pgpass 文件，并且将该文件的权限设置为仅当前用户可见：
chmod 600 .pgpass

