
合并MP3文件
cat 1.mp3 2.mp3 3.mp3 4.mp3 4.mp3 > all.mp3
ffmpeg -i "concat:1.mp3|2.mp3|3.mp3|4.mp3|4.mp3" -acodec copy all2.mp3


ffmpeg -i in.mov -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > out.gif

https://segmentfault.com/a/1190000002502526
brew install ffmpeg --with-faac --with-fdk-aac --with-ffplay --with-fontconfig --with-freetype --with-libass --with-libbluray --with-libcaca --with-libsoxr --with-libquvi --with-frei0r --with-libvidstab --with-libvorbis --with-libvpx --with-opencore-amr --with-openjpeg --with-openssl --with-opus --with-rtmpdump --with-schroedinger --with-speex --with-theroa --with-tools --with-x265
ffmpeg -i MVI_7274.MOV -vcodec libx264 -preset fast -crf 20 -y -vf "scale=1920:-1" -acodec libmp3lame -ab 128k a.mp4
ffmpeg -threads 2 -crf 20 -y -i ML-02.avi -strict experimental ML-02.mp4

一般来说，压制480p我会用20左右，压制720p我会用16-18
ffmpeg -i 2018022813524728175.mp4 -vcodec libx264 -preset fast -crf 20 -y -vf "scale=1920:-1" -acodec libmp3lame -ab 128k 1.mp4

视频帧率10fps，音频码率32k
ffmpeg.exe -i "C:\test.mp4" -r 10 -b:a 32k "C:\test_mod.mp4"

ffmpeg -i IMG_0572.m4v -c copy 1.mp4
ffmpeg -i IMG_0572.m4v -threads 2 2.mp4
ffmpeg -i IMG_0572.m4v -preset fast -crf 20 3.mp4
ffmpeg -i IMG_0572.m4v -r 10 -b:a 32k 4.mp4
ffmpeg -i IMG_0572.m4v -c copy 5.mp4
ffmpeg -y -i IMG_0572.m4v -vcodec libx264 -s 176x144 -r 29.97 -b 1500 -acodec aac -ac 2 -ar 48000 -ab 128 -vol 100 -f mp4 6.mp4
ffmpeg -i IMG_0572.m4v -threads 2 -crf 20 -y 7.mp4
ffmpeg -i IMG_0572.m4v -vcodec copy -acodec copy 8.mp4
ffmpeg  -i IMG_0572.m4v -vcodec libx264 -s 1920X1080 -acodec copy 9.mp4
ffmpeg -i IMG_0572.m4v -b:v 300k -r 15 -s 960x540 10.mp4
ffmpeg -i IMG_0572.m4v -r 15 -b:a 32k 11.mp4
ffmpeg -i IMG_0572.m4v -r 15 -b:a 150k 12.mp4
ffmpeg -i IMG_0572.m4v -r 15 -b:a 150k 12.mp4
ffmpeg -i IMG_0572.m4v -r 15 -b 32k 13.mp4
ffmpeg -i IMG_0572.m4v -r 20 -b 1280k 13.mp4
ffmpeg -i IMG_0572.m4v -r 30 -b:a 1280k 14.mp4
ffmpeg -i IMG_0572.m4v -r 25 -b:a 300k 15.mp4
ffmpeg -i IMG_0572.m4v -s hd720 -c:v libx264 -crf 23 -c:a aac -strict -2 16.mp4
ffmpeg -i IMG_0572.m4v -vf scale=-1:720 17.mp4
ffmpeg -i IMG_0572.m4v -c copy -c:v libx264 -vf scale=-2:720 18.mp4

ffmpeg -i IMG_0572.m4v -ab 56 -ar 22050 -b 500 -r 15 1.flv
ffmpeg -i IMG_0572.m4v 2.flv
ffmpeg -i IMG_0572.m4v -r 15 -b 1024k 3.flv

Linux下使用FFmpeg进行屏幕录制相对比较方便，可以使用x11grab，使用如下的命令：
ffmpeg -f x11grab -s 1600x900 -r 50 -vcodec libx264 –preset:v ultrafast –tune:v zerolatency -crf 18 -f mpegts udp://localhost:1234
详细时使用方式可以参考这篇文章：DesktopStreaming With FFmpeg for Lower Latency
http://www.waitwut.info/blog/2013/06/09/desktop-streaming-with-ffmpeg-for-lower-latency/

window 下
Windows下屏幕录制的设备：gdigrab。
gdigrab是基于GDI的抓屏设备，可以用于抓取屏幕的特定区域。在这里记录一下gdigrab的用法。
gdigrab通过设定不同的输入URL，支持两种方式的屏幕抓取：
（1）“desktop”：抓取整张桌面。或者抓取桌面中的一个特定的区域。
（2）“title={窗口名称}”：抓取屏幕中特定的一个窗口。
下面举几个例子。
最简单的抓屏：

ffmpeg -f gdigrab -i desktop out.mpg
从屏幕的（10,20）点处开始，抓取640x480的屏幕，设定帧率为5
ffmpeg -f gdigrab -framerate 5 -offset_x 10 -offset_y 20 -video_size 640x480 -i desktop out.mpg

这样的确很简单..
ffmpeg 屏幕录制 so easy....


http://www.oschina.net/p/paint.net
http://www.oschina.net/p/screentogif
http://www.oschina.net/p/greenshot
http://www.oschina.net/p/zscreen
http://www.cnblogs.com/zhuweisky/p/3593917.html
http://www.jb51.net/article/37082.htm
http://blog.csdn.net/xiehuan_uestc/article/details/7034516
http://bbs.csdn.net/topics/391821439
http://bbs.csdn.net/topics/300112687
http://www.cnblogs.com/stg609/archive/2008/03/19/1113694.html
https://msdn.microsoft.com/en-us/library/h34kh0x2(v=vs.110).aspx
http://www.cnblogs.com/yufun/archive/2009/01/20/1378812.html

http://blog.csdn.net/crystal_lz/article/details/8274277
http://download.csdn.net/download/crystal_lz/4889763
http://download.csdn.net/detail/crystal_lz/4863320


private void panel1_MouseDown(object sender, MouseEventArgs e) {
    using (Graphics g = this.panel1.CreateGraphics()) {
        Pen pen = new Pen(Color.Black, 2);
        Brush brush = new SolidBrush(this.panel1.BackColor);

        g.FillRectangle(brush, this.panel1.Bounds);  // redraws background
        g.DrawRectangle(pen, e.X, e.Y, 20, 20);

        pen.Dispose();
        brush.Dispose();
    }
}

private void panel1_Click(object sender, EventArgs e) {
    using (Graphics g = this.panel1.CreateGraphics()) {
        Pen pen = new Pen(Color.Black, 2);
        Brush brush = new SolidBrush(this.panel1.BackgroundColor);

        g.DrawRectangle(pen, 100,100, 100, 200);

        pen.Dispose();
    }
}

http://ffmpeg.org/releases/ffmpeg-4.2.5.tar.gz
ffmpeg version 4.2.5 Copyright (c) 2000-2021 the FFmpeg developers
  built with gcc 8 (GCC)
  configuration: --prefix=/usr --bindir=/usr/bin --datadir=/usr/share/ffmpeg --docdir=/usr/share/doc/ffmpeg --incdir=/usr/include/ffmpeg --libdir=/usr/lib64 --mandir=/usr/share/man --arch=x86_64 --optflags='-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection' --extra-ldflags='-Wl,-z,relro -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld ' --extra-cflags=' ' --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libvo-amrwbenc --enable-version3 --enable-bzlib --disable-crystalhd --enable-fontconfig --enable-frei0r --enable-gcrypt --enable-gnutls --enable-ladspa --enable-libaom --enable-libdav1d --enable-libass --enable-libbluray --enable-libcdio --enable-libdrm --enable-libjack --enable-libfreetype --enable-libfribidi --enable-libgsm --enable-libmp3lame --enable-nvenc --enable-openal --enable-opencl --enable-opengl --enable-libopenjpeg --enable-libopus --enable-libpulse --enable-librsvg --enable-libsrt --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libvorbis --enable-libv4l2 --enable-libvidstab --enable-libvmaf --enable-version3 --enable-vapoursynth --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-libzimg --enable-libzvbi --enable-avfilter --enable-avresample --enable-libmodplug --enable-postproc --enable-pthreads --disable-static --enable-shared --enable-gpl --disable-debug --disable-stripping --shlibdir=/usr/lib64 --enable-libmfx --enable-runtime-cpudetect
http://ffmpeg.org/releases/ffmpeg-2.8.15.tar.gz
ffmpeg version 2.8.15 Copyright (c) 2000-2018 the FFmpeg developers
  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-36)
  configuration: --prefix=/usr --bindir=/usr/bin --datadir=/usr/share/ffmpeg --incdir=/usr/include/ffmpeg --libdir=/usr/lib64 --mandir=/usr/share/man --arch=x86_64 --optflags='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic' --extra-ldflags='-Wl,-z,relro ' --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libvo-amrwbenc --enable-version3 --enable-bzlib --disable-crystalhd --enable-gnutls --enable-ladspa --enable-libass --enable-libcdio --enable-libdc1394 --enable-libfdk-aac --enable-nonfree --disable-indev=jack --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-openal --enable-libopenjpeg --enable-libopus --enable-libpulse --enable-libschroedinger --enable-libsoxr --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libv4l2 --enable-libx264 --enable-libx265 --enable-libxvid --enable-x11grab --enable-avfilter --enable-avresample --enable-postproc --enable-pthreads --disable-static --enable-shared --enable-gpl --disable-debug --disable-stripping --shlibdir=/usr/lib64 --enable-runtime-cpudetect

http://ffmpeg.org/releases/ffmpeg-4.4.tar.gz
wget -c http://ffmpeg.org/releases/ffmpeg-5.0.tar.gz
tar zxvf ffmpeg-5.0.tar.gz
http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2

ffmpeg-3.4.1
```
wget -c http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz
tar zxvf yasm-1.3.0.tar.gz
cd yasm-1.3.0
./configure --prefix=/usr/local
make
make install

wget -c http://ffmpeg.org/releases/ffmpeg-3.4.1.tar.bz2
tar -jxvf ffmpeg-3.4.1.tar.bz2
cd ffmpeg-3.4.1
./configure --enable-shared --enable-gpl --prefix=/usr/local/ffmpeg
make
make install

echo "/usr/local/ffmpeg/lib" >> /etc/ld.so.conf
ldconfig

ffmpeg -version
```

ffmpeg-snapshot
```
wget -c http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2
tar -jxvf ffmpeg-snapshot.tar.bz2
bzip2 -d ffmpeg-snapshot.tar.bz2
tar -xvf ffmpeg-snapshot.tar
cd ffmpeg
./configure --prefix=/usr/local/ffmpeg --disable-static --enable-shared --enable-gpl
make -j4 && sudo make install
```

libfdk-aac-dev libspeex-dev libx264-dev libx265-dev libnuma-dev
./configure --prefix=/opt/ffmpeg --enable-gpl --enable-nonfree --enable-libfdk-aac --enable-libx264 --enable-libx265 --enable-filter=delogo --enable-debug --disable-optimizations --enable-libspeex  --enable-shared --enable-pthreads --enable-version3 --enable-hardcoded-tables --cc=gcc --host-cflags= --host-ldflags= --disable-x86asm

centos 升级GCC8
```
yum install centos-release-scl
yum list dev\*gcc
yum install devtoolset-8-gcc devtoolset-8-gcc-c++
yum install devtoolset-8-gcc*
source /opt/rh/devtoolset-8/enable
scl enable devtoolset-8 bash
gcc -v
echo "source /opt/rh/devtoolset-8/enable" >> /etc/bashrc
source /etc/bashrc
```

https://rpmfind.net/linux/rpm2html/search.php?query=redis
https://rpmfind.net/linux/rpm2html/search.php?query=ffmpeg

