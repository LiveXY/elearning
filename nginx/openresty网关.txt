网关选型

1、Tomcat/Jetty+NIO+Servlet3
2、Nginx
3、Spring WebFlux
4、Soul
5、Spring cloud Gateway
6、Zuul
7、OpenResty
8、Kong
9、Netty 自建


OpenResty 将一个 HTTP 请求划分为11个阶段，每个阶段有自己的专属职责
init_by_lua*
init_worker_by_lua*

request start -> secure request -> ssl_certificate_by_lua*
set_by_lua*
rewrite_by_lua*
access_by_lua*

content generated by ?
lua -> content_by_lua*
upstream -> balancer_by_lua*
header_filter_by_lua*
body_filter_by_lua*

log_by_lua*

函数功能说明：
set_by_lua，用于设置变量
rewrite_by_lua，用于转发、重定向等
access_by_lua，用于准入、权限等
content_by_lua，用于生成返回内容
balancer_by_lua，负载均衡，路由转发
header_filter_by_lua，用于响应头过滤处理
body_filter_by_lua，用于响应体过滤处理
log_by_lua，日志记录

openresty 安装
yum install yum-utils -y
yum-config-manager --add-repo https://openresty.org/package/centos/openresty.repo
yum install openresty openresty-resty -y

nginx.conf配置
worker_processes  auto;
worker_rlimit_nofile 1000000;
events {
    use epoll;
    worker_connections  150000;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $content_length $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$upstream_response_time" "$request_time"';
    access_log  logs/access.log  main;
    server {
        listen 8080;
        location / {
            access_by_lua_block {
                local headers = ngx.req.get_headers(0)
                local trace_id= headers["X-Trace-Id"]
                ngx.log(ngx.ERR, trace_id)
            }
            #  ngx.say("<p>hello !</p>")
            proxy_pass http://168.12.8.10:8080;
        }
    }
    server {
        listen 8082;
        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say("<p>Hello Openresty!</p>")
            }
        }
    }
}
环境变量
echo "export PATH=$PATH:/usr/local/openresty/nginx/sbin" >> /etc/profile
source /etc/profile
启动 openresty
nginx -c /usr/local/openresty/nginx/conf/nginx.conf
nginx -s reload






